#定义一些变量
system-params:
  ip-address: http://localhost
  picture-dir: /Answer/spring-cloud-user-server-8081/src/main/resources/files/

server:
  port: 8081

spring:
#  cloud:
#    sentinel:
#      transport:
#        port: 8719
#        dashboard: localhost:9090 #指定服务的地址
#  application:
#    name: spring-cloud-user-server-8081
  # 配置数据源
  datasource:
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/answer?useSSL=true&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai
  mail:
    host: smtp.qq.com
    username: 3302763596@qq.com
    password: qzceptfixrnnchjh
    default-encoding: UTF-8

  # redis配置
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    # password:
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0

  rabbitmq:
    host: 49.234.3.127 # rabbitmq的连接地址
    port: 5672 # rabbitmq的连接地址
    username: guest
    password: guest
    virtual-host: /
  #publisher-confirms: true #如果对异步消息需要回调必须设置为true


# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 600 # 604800 7天
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false
 # token-prefix: Token_

#sentinel服务熔断

#bloom过滤器的值
bloom:
  filter:
    MAX_INSERT: 1000 #预计的最大插入量
    fpp: 0.001F # 容错率
